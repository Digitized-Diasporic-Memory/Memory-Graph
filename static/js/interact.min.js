// Interact.js (https://interactjs.io/) is for editing gestures we don't need in a read-only version anyway,
// so let's hijack it for our purposes.
console.debug("Hijacked :-)");

let page_title = "Lamentable Technology";
let start_page = "start";

// This script is loaded before main.js (which is huge), so we can inject a loading message heee.

let loaderImage =
  "data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='%23ccc'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E";

let root = document.childNodes[1].childNodes[1].childNodes[0];
root.innerHTML = `<div class="loading"><span>Logseq is loading ...</span><span class="apology">Sorry about the current size of the bundle. We\'re working on slimming it down. </span><img src="${loaderImage}"/></div>`;

// Add styles that become relevant when this injection is active
let styles = `
	.title {
		font-size: 1.2em;
		color: var(--ls-primary-text-color);
	}
	#head .button.title { opacity: 1; }
	/* Add margin the hamburger button used to have to the head area */
	#head > .l { margin-left: .4rem; }
	/* Loader */
	#root .loading {
		color: darkgray;
		margin-top: 20vh;
		margin-left: 2rem;
		margin-right: 2rem;
		font-size: 2.5rem;
		text-align: center;
	}
	#root .loading span {
		display: block;
		line-height: 1.5em;
		margin-bottom: 1rem;
	}
	#root .loading .apology { font-size: .3em; }
	#root .loading img { height: 8rem; margin-top: 3rem; }
	/* Page title in header */
	#head .page-title {
		display: block;
		overflow: hidden;
		transition: width 1s;
	}
`;
let styleSheet = document.createElement("style");
styleSheet.type = "text/css";
styleSheet.innerText = styles;
document.head.appendChild(styleSheet);

let redirect = () => {
  let hash = window.location.hash;
  console.debug("Page hash:", hash);

  // Start page redirect (otherweise Logseq opens either the "All Pages" view or the latest Journal page if no page is provided)
  if (!hash || hash == "#" || hash == "#/") {
    console.debug("Start page redirect");
    window.location.hash = `#/page/${start_page}`;
  }

  // "All pages" view on #/page/ (equivalent of index)
  if (hash == "#/page" || hash == "#/page/") {
    console.debug("All pages redirect");
    window.location.hash = "#/all-pages";
  }

  // Todo: Something about "404" pages
};

let showOrHideHeadPageTitle = () => {
  let el = document.getElementById("main-content-container");
  if (!el) return;

  // Yup, that's slow
  let title = document.querySelector("#main-content-container .page-title");
  let headTitle = document.querySelector("#head .page-title");

  let y = title.getBoundingClientRect().y;
  let titleInView = y > 0;

  headTitle.style.width = titleInView
    ? "0px"
    : headerPageTitleOriginalWidth + "px";
};

// Update the page title in the header
let headerPageTitleOriginalWidth;
let updatePageTitle = () => {
  let headButtons = document.querySelector("#head > .l");

  // Remove old element if it already exists
  document.querySelector("#head .page-title")?.remove();

  let pageTitle = document.title || ""; // hacky indeed
  headPageTitle = document.createElement("div");

  headPageTitle.innerHTML = `<a class="title page-title" href="${window.location}">${pageTitle}</a>`;

  // After title
  headButtons?.insertBefore(
    headPageTitle,
    document.querySelector("#head .title").parentNode.nextSibling
  );

  // Title width
  headerPageTitleOriginalWidth = headPageTitle.getBoundingClientRect().width;

  showOrHideHeadPageTitle();
};

let onPageChange = () => {
  redirect();
  updatePageTitle();
};

onPageChange();
// window.addEventListener('hashchange', () => onPageChange());
// hashchange doesn't reliably fire for some reason ... Yep, it's getting hackier and hackier. :-)
new MutationObserver(() => {
  onPageChange();
}).observe(document.querySelector("title"), { childList: true });

window.addEventListener("load", () => {
  // If you explicitly set it I have to explicitly reset it ...
  document.querySelector("#head").style.fontSize = "";

  // Add title
  let headButtons = document.querySelector("#head > .l");
  let title = document.createElement("div");
  title.innerHTML = `<a href="#/page/start" class="button title">${page_title}</a>`;
  headButtons.prepend(title);

  // Remove hamburger menu button because now the title can navigate to the start page
  // To do: Re-add Graph view and All pages
  document.getElementById("left-menu").parentElement.remove();

  //// Cool title-in-header effect
  // Add page name to header
  updatePageTitle();

  // Title width
  let lastScroll = 0;
  document.getElementById("main-content-container").addEventListener(
    "scroll",
    (ev) => {
      showOrHideHeadPageTitle();
    },
    { passive: true }
  );
});
